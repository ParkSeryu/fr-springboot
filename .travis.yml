language: java
jdk:
  - openjdk8

branches:
  only:
    - main

before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
script: "./gradlew clean build"

before_deploy: # deploy가 실행되기 전에 수행된다. CodeDeploy는 Jar 파일을 인식하지 못하므로 기타 설정 파일들을 모아 압축(zip) 한다.
  - zip -r aws-springboot2-webservice * # 현재 위치의 모든 파일을 aws-springboot2-webservice 이름으로 압축(zip)한다.
  - mkdir -p deploy # deploy라는 디렉토리를 Travis CI가 실행 중인 위치에서 생성한다.
  - mv aws-springboot2-webservice.zip deploy/aws-springboot2-webservice.zip # aws-springboot-webservice.zip파일을 deploy/freelec-springboot2-webservice.zip으로 이동시킨다.

deploy: # S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언한다.
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된값

    bucket: aws-springboot2-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private하게
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      branch: main

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값

    bucket: aws-springboot2-build # S3 버킷
    key: aws-springboot2-webservice.zip # 빌드 파일을 압축해서 전달

    bundle_type: zip # 압축 확장자
    application : aws-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: aws-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람!
notifications:
  email:
    recipients:
      - pgh0616@naver.com


