language: java
jdk:
  - openjdk8

branches:
  only:
    - main

before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
script: "./gradlew clean build"

before_deploy: # deploy가 실행되기 전에 수행된다. CodeDeploy는 Jar 파일을 인식하지 못하므로 기타 설정 파일들을 모아 압축(zip) 한다.
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담은 디렉토리 생성 ( Travis CI는 S3로 특정 파일만 업로드 된다. 디렉토리 단위로만 업로드할 수 있기 때문에 before-deploy 디렉토리는 항상 생성한다.)
  - cp scripts/*.sh before-deploy/ # before-deploy에는 zip 파일에 포함시킬 파일들을 저장한다.
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축 # zip -r 명령어를 통해 before-deploy 디렉토리 전체 파일을 압축한다.
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/aws-springboot2-webservice.zip # deploy로 zip파일 이동

deploy: # S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언한다.
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된값

    bucket: aws-springboot2-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private하게
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      branch: main

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값

    bucket: aws-springboot2-build # S3 버킷
    key: aws-springboot2-webservice.zip # 빌드 파일을 압축해서 전달

    bundle_type: zip # 압축 확장자
    application : aws-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: aws-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      branch: main

# CI 실행 완료 시 메일로 알람!
notifications:
  email:
    recipients:
      - pgh0616@naver.com


